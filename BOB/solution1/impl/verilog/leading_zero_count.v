// ==============================================================
// Generated by Vitis HLS v2023.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="leading_zero_count_leading_zero_count,hls_ip_2023_2_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvf1517-3-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.539750,HLS_SYN_LAT=1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=2,HLS_SYN_LUT=64,HLS_VERSION=2023_2_2}" *)

module leading_zero_count (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r,
        ap_return
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] input_r;
output  [5:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] LUT_array_i_address0;
reg    LUT_array_i_ce0;
wire   [3:0] LUT_array_i_q0;
wire   [7:0] LUT_array_i_address1;
reg    LUT_array_i_ce1;
wire   [3:0] LUT_array_i_q1;
wire   [7:0] LUT_array_i_address2;
reg    LUT_array_i_ce2;
wire   [3:0] LUT_array_i_q2;
wire   [7:0] LUT_array_i_address3;
reg    LUT_array_i_ce3;
wire   [3:0] LUT_array_i_q3;
wire   [63:0] zext_ln452_fu_117_p1;
wire   [63:0] zext_ln452_1_fu_132_p1;
wire   [63:0] zext_ln452_2_fu_147_p1;
wire   [63:0] zext_ln452_3_fu_156_p1;
wire   [7:0] input_fu_107_p4;
wire   [7:0] input_1_fu_122_p4;
wire   [7:0] input_2_fu_137_p4;
wire   [7:0] input_3_fu_152_p1;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_fu_161_p3;
wire   [3:0] tmp_2_fu_169_p5;
wire   [3:0] intermediate4_fu_181_p2;
wire   [4:0] zext_ln171_1_fu_191_p1;
wire   [4:0] zext_ln171_fu_187_p1;
wire   [0:0] tmp_1_fu_201_p3;
wire   [3:0] tmp_5_fu_209_p5;
wire   [3:0] intermediate4_1_fu_221_p2;
wire   [4:0] zext_ln171_3_fu_231_p1;
wire   [4:0] zext_ln171_2_fu_227_p1;
wire   [4:0] LUTS16_fu_195_p2;
wire   [0:0] tmp_3_fu_241_p3;
wire   [4:0] tmp_9_fu_249_p6;
wire   [4:0] LUTS16_1_fu_235_p2;
wire   [4:0] intermediate5_fu_263_p2;
wire   [5:0] zext_ln176_1_fu_273_p1;
wire   [5:0] zext_ln176_fu_269_p1;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
end

leading_zero_count_LUT_array_i_ROM_AUTO_1R #(
    .DataWidth( 4 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
LUT_array_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(LUT_array_i_address0),
    .ce0(LUT_array_i_ce0),
    .q0(LUT_array_i_q0),
    .address1(LUT_array_i_address1),
    .ce1(LUT_array_i_ce1),
    .q1(LUT_array_i_q1),
    .address2(LUT_array_i_address2),
    .ce2(LUT_array_i_ce2),
    .q2(LUT_array_i_q2),
    .address3(LUT_array_i_address3),
    .ce3(LUT_array_i_ce3),
    .q3(LUT_array_i_q3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        LUT_array_i_ce0 = 1'b1;
    end else begin
        LUT_array_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        LUT_array_i_ce1 = 1'b1;
    end else begin
        LUT_array_i_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        LUT_array_i_ce2 = 1'b1;
    end else begin
        LUT_array_i_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        LUT_array_i_ce3 = 1'b1;
    end else begin
        LUT_array_i_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LUTS16_1_fu_235_p2 = (zext_ln171_3_fu_231_p1 + zext_ln171_2_fu_227_p1);

assign LUTS16_fu_195_p2 = (zext_ln171_1_fu_191_p1 + zext_ln171_fu_187_p1);

assign LUT_array_i_address0 = zext_ln452_3_fu_156_p1;

assign LUT_array_i_address1 = zext_ln452_2_fu_147_p1;

assign LUT_array_i_address2 = zext_ln452_1_fu_132_p1;

assign LUT_array_i_address3 = zext_ln452_fu_117_p1;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_return = (zext_ln176_1_fu_273_p1 + zext_ln176_fu_269_p1);

assign input_1_fu_122_p4 = {{input_r[23:16]}};

assign input_2_fu_137_p4 = {{input_r[15:8]}};

assign input_3_fu_152_p1 = input_r[7:0];

assign input_fu_107_p4 = {{input_r[31:24]}};

assign intermediate4_1_fu_221_p2 = (tmp_5_fu_209_p5 & LUT_array_i_q0);

assign intermediate4_fu_181_p2 = (tmp_2_fu_169_p5 & LUT_array_i_q2);

assign intermediate5_fu_263_p2 = (tmp_9_fu_249_p6 & LUTS16_1_fu_235_p2);

assign tmp_1_fu_201_p3 = LUT_array_i_q1[32'd3];

assign tmp_2_fu_169_p5 = {{{{tmp_fu_161_p3}, {tmp_fu_161_p3}}, {tmp_fu_161_p3}}, {tmp_fu_161_p3}};

assign tmp_3_fu_241_p3 = LUTS16_fu_195_p2[32'd4];

assign tmp_5_fu_209_p5 = {{{{tmp_1_fu_201_p3}, {tmp_1_fu_201_p3}}, {tmp_1_fu_201_p3}}, {tmp_1_fu_201_p3}};

assign tmp_9_fu_249_p6 = {{{{{tmp_3_fu_241_p3}, {tmp_3_fu_241_p3}}, {tmp_3_fu_241_p3}}, {tmp_3_fu_241_p3}}, {tmp_3_fu_241_p3}};

assign tmp_fu_161_p3 = LUT_array_i_q3[32'd3];

assign zext_ln171_1_fu_191_p1 = intermediate4_fu_181_p2;

assign zext_ln171_2_fu_227_p1 = LUT_array_i_q1;

assign zext_ln171_3_fu_231_p1 = intermediate4_1_fu_221_p2;

assign zext_ln171_fu_187_p1 = LUT_array_i_q3;

assign zext_ln176_1_fu_273_p1 = intermediate5_fu_263_p2;

assign zext_ln176_fu_269_p1 = LUTS16_fu_195_p2;

assign zext_ln452_1_fu_132_p1 = input_1_fu_122_p4;

assign zext_ln452_2_fu_147_p1 = input_2_fu_137_p4;

assign zext_ln452_3_fu_156_p1 = input_3_fu_152_p1;

assign zext_ln452_fu_117_p1 = input_fu_107_p4;

endmodule //leading_zero_count
