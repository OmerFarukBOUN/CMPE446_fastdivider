

================================================================
== Vitis HLS Report for 'leading_zero_count'
================================================================
* Date:           Sat Mar 16 03:59:45 2024

* Version:        2023.2.2 (Build 4101106 on Feb  9 2024)
* Project:        BOB
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  2.540 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        1|        1|  10.000 ns|  10.000 ns|    2|    2|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.09>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%input_r_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %input_r" [div.cpp:119]   --->   Operation 3 'read' 'input_r_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%input = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %input_r_read, i32 24, i32 31" [div.cpp:159]   --->   Operation 4 'partselect' 'input' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%zext_ln452 = zext i8 %input" [div.cpp:452->div.cpp:159]   --->   Operation 5 'zext' 'zext_ln452' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%LUT_array_i_addr = getelementptr i4 %LUT_array_i, i64 0, i64 %zext_ln452" [div.cpp:452->div.cpp:159]   --->   Operation 6 'getelementptr' 'LUT_array_i_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [2/2] (1.09ns)   --->   "%LUTS8 = load i8 %LUT_array_i_addr" [div.cpp:159]   --->   Operation 7 'load' 'LUTS8' <Predicate = true> <Delay = 1.09> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 4> <Depth = 256> <ROM>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%input_1 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %input_r_read, i32 16, i32 23" [div.cpp:159]   --->   Operation 8 'partselect' 'input_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%zext_ln452_1 = zext i8 %input_1" [div.cpp:452->div.cpp:159]   --->   Operation 9 'zext' 'zext_ln452_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%LUT_array_i_addr_1 = getelementptr i4 %LUT_array_i, i64 0, i64 %zext_ln452_1" [div.cpp:452->div.cpp:159]   --->   Operation 10 'getelementptr' 'LUT_array_i_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [2/2] (1.09ns)   --->   "%LUTS8_1 = load i8 %LUT_array_i_addr_1" [div.cpp:159]   --->   Operation 11 'load' 'LUTS8_1' <Predicate = true> <Delay = 1.09> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 4> <Depth = 256> <ROM>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%input_2 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %input_r_read, i32 8, i32 15" [div.cpp:159]   --->   Operation 12 'partselect' 'input_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%zext_ln452_2 = zext i8 %input_2" [div.cpp:452->div.cpp:159]   --->   Operation 13 'zext' 'zext_ln452_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%LUT_array_i_addr_2 = getelementptr i4 %LUT_array_i, i64 0, i64 %zext_ln452_2" [div.cpp:452->div.cpp:159]   --->   Operation 14 'getelementptr' 'LUT_array_i_addr_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [2/2] (1.09ns)   --->   "%LUTS8_2 = load i8 %LUT_array_i_addr_2" [div.cpp:159]   --->   Operation 15 'load' 'LUTS8_2' <Predicate = true> <Delay = 1.09> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 4> <Depth = 256> <ROM>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%input_3 = trunc i32 %input_r_read" [div.cpp:159]   --->   Operation 16 'trunc' 'input_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%zext_ln452_3 = zext i8 %input_3" [div.cpp:452->div.cpp:159]   --->   Operation 17 'zext' 'zext_ln452_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%LUT_array_i_addr_3 = getelementptr i4 %LUT_array_i, i64 0, i64 %zext_ln452_3" [div.cpp:452->div.cpp:159]   --->   Operation 18 'getelementptr' 'LUT_array_i_addr_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [2/2] (1.09ns)   --->   "%LUTS8_3 = load i8 %LUT_array_i_addr_3" [div.cpp:159]   --->   Operation 19 'load' 'LUTS8_3' <Predicate = true> <Delay = 1.09> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 4> <Depth = 256> <ROM>

State 2 <SV = 1> <Delay = 2.53>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i6 0"   --->   Operation 20 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%spectopmodule_ln119 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [div.cpp:119]   --->   Operation 21 'spectopmodule' 'spectopmodule_ln119' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %input_r"   --->   Operation 22 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %input_r, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 23 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/2] (1.09ns)   --->   "%LUTS8 = load i8 %LUT_array_i_addr" [div.cpp:159]   --->   Operation 24 'load' 'LUTS8' <Predicate = true> <Delay = 1.09> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 4> <Depth = 256> <ROM>
ST_2 : Operation 25 [1/2] (1.09ns)   --->   "%LUTS8_1 = load i8 %LUT_array_i_addr_1" [div.cpp:159]   --->   Operation 25 'load' 'LUTS8_1' <Predicate = true> <Delay = 1.09> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 4> <Depth = 256> <ROM>
ST_2 : Operation 26 [1/2] (1.09ns)   --->   "%LUTS8_2 = load i8 %LUT_array_i_addr_2" [div.cpp:159]   --->   Operation 26 'load' 'LUTS8_2' <Predicate = true> <Delay = 1.09> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 4> <Depth = 256> <ROM>
ST_2 : Operation 27 [1/2] (1.09ns)   --->   "%LUTS8_3 = load i8 %LUT_array_i_addr_3" [div.cpp:159]   --->   Operation 27 'load' 'LUTS8_3' <Predicate = true> <Delay = 1.09> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.09> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 4> <Depth = 256> <ROM>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %LUTS8, i32 3" [div.cpp:170]   --->   Operation 28 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns) (grouped into LUT with out node LUTS16)   --->   "%tmp_2 = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i1.i1.i1.i1, i1 %tmp, i1 %tmp, i1 %tmp, i1 %tmp" [div.cpp:170]   --->   Operation 29 'bitconcatenate' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node LUTS16)   --->   "%intermediate4 = and i4 %LUTS8_1, i4 %tmp_2" [div.cpp:170]   --->   Operation 30 'and' 'intermediate4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.32> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node LUTS16)   --->   "%zext_ln171 = zext i4 %LUTS8" [div.cpp:171]   --->   Operation 31 'zext' 'zext_ln171' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node LUTS16)   --->   "%zext_ln171_1 = zext i4 %intermediate4" [div.cpp:171]   --->   Operation 32 'zext' 'zext_ln171_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.72ns) (out node of the LUT)   --->   "%LUTS16 = add i5 %zext_ln171_1, i5 %zext_ln171" [div.cpp:171]   --->   Operation 33 'add' 'LUTS16' <Predicate = true> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_1 = bitselect i1 @_ssdm_op_BitSelect.i1.i4.i32, i4 %LUTS8_2, i32 3" [div.cpp:170]   --->   Operation 34 'bitselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node LUTS16_1)   --->   "%tmp_5 = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i1.i1.i1.i1, i1 %tmp_1, i1 %tmp_1, i1 %tmp_1, i1 %tmp_1" [div.cpp:170]   --->   Operation 35 'bitconcatenate' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node LUTS16_1)   --->   "%intermediate4_1 = and i4 %LUTS8_3, i4 %tmp_5" [div.cpp:170]   --->   Operation 36 'and' 'intermediate4_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.32> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node LUTS16_1)   --->   "%zext_ln171_2 = zext i4 %LUTS8_2" [div.cpp:171]   --->   Operation 37 'zext' 'zext_ln171_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node LUTS16_1)   --->   "%zext_ln171_3 = zext i4 %intermediate4_1" [div.cpp:171]   --->   Operation 38 'zext' 'zext_ln171_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.72ns) (out node of the LUT)   --->   "%LUTS16_1 = add i5 %zext_ln171_3, i5 %zext_ln171_2" [div.cpp:171]   --->   Operation 39 'add' 'LUTS16_1' <Predicate = true> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_3 = bitselect i1 @_ssdm_op_BitSelect.i1.i5.i32, i5 %LUTS16, i32 4" [div.cpp:175]   --->   Operation 40 'bitselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node add_ln176)   --->   "%tmp_9 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i1.i1.i1.i1.i1, i1 %tmp_3, i1 %tmp_3, i1 %tmp_3, i1 %tmp_3, i1 %tmp_3" [div.cpp:175]   --->   Operation 41 'bitconcatenate' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node add_ln176)   --->   "%intermediate5 = and i5 %tmp_9, i5 %LUTS16_1" [div.cpp:175]   --->   Operation 42 'and' 'intermediate5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.18> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node add_ln176)   --->   "%zext_ln176 = zext i5 %LUTS16" [div.cpp:176]   --->   Operation 43 'zext' 'zext_ln176' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node add_ln176)   --->   "%zext_ln176_1 = zext i5 %intermediate5" [div.cpp:176]   --->   Operation 44 'zext' 'zext_ln176_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.71ns) (out node of the LUT)   --->   "%add_ln176 = add i6 %zext_ln176_1, i6 %zext_ln176" [div.cpp:176]   --->   Operation 45 'add' 'add_ln176' <Predicate = true> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%ret_ln176 = ret i6 %add_ln176" [div.cpp:176]   --->   Operation 46 'ret' 'ret_ln176' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.099ns
The critical path consists of the following:
	wire read operation ('input_r_read', div.cpp:119) on port 'input_r' (div.cpp:119) [7]  (0.000 ns)
	'getelementptr' operation 8 bit ('LUT_array_i_addr', div.cpp:452->div.cpp:159) [10]  (0.000 ns)
	'load' operation 4 bit ('LUTS8', div.cpp:159) on array 'LUT_array_i' [11]  (1.099 ns)

 <State 2>: 2.540ns
The critical path consists of the following:
	'load' operation 4 bit ('LUTS8', div.cpp:159) on array 'LUT_array_i' [11]  (1.099 ns)
	'add' operation 5 bit ('LUTS16', div.cpp:171) [29]  (0.723 ns)
	'add' operation 6 bit ('add_ln176', div.cpp:176) [41]  (0.718 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
